name: Scrape Films and Deploy to GitHub Pages

on:
  schedule:
    # Run daily at 6:00 AM UTC (adjust timezone as needed)
    - cron: '0 6 * * *'
  workflow_dispatch:
    # Allow manual triggering

jobs:
  scrape-and-deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run full scraping pipeline
      env:
        TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: |
        echo "üé¨ Starting full film scraping pipeline using shell script..."
        
        # Make shell script executable
        chmod +x scripts/run_full_pipeline.sh
        
        # Run the full pipeline script
        # Include translation if GEMINI_API_KEY is available
        scripts/run_full_pipeline.sh
        
        # Generate index.html for GitHub Pages
        echo "üîß Generating index.html for GitHub Pages..."
        python scripts/static_generator.py --output index.html
        
        echo "‚úÖ Pipeline completed successfully!"
    
    - name: Commit updated data and index.html
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data/*.json index.html || true
        git diff --staged --quiet || git commit -m "Auto-update: Latest film data and website [$(date)]"
        git push || true
    
    - name: Upload artifacts for debugging
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: scraping-results
        path: |
          data/*_films_with_english_subs.json
          index.html
        retention-days: 7
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Create Pages artifact
      run: |
        mkdir -p _site
        cp index.html _site/
        # Copy any additional assets if needed
        if [ -f "favicon.ico" ]; then
          cp favicon.ico _site/
        fi
    
    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: _site
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
    
    - name: Notify completion
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "üéâ Deployment successful!"
          echo "üì± Site available at: ${{ steps.deployment.outputs.page_url }}"
        else
          echo "‚ùå Deployment failed"
        fi